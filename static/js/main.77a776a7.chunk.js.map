{"version":3,"sources":["components/LoginButton.js","components/Home.js","components/Dashboard.js","components/Preview.js","App.js","serviceWorker.js","index.js"],"names":["LoginButton","props","state","msg","redirect","userid","loading","redirectLink","showLoading","bind","hideLoading","doTheLogin","this","setState","setTimeout","axios","get","headers","then","res","response","data","clientId","redirectUri","encodeURIComponent","scope","redirectCheck","loadingCheck","window","location","replace","Button","className","size","color","onClick","React","Component","Home","loggedIn","user_id","id","class","rel","target","href","Dashboard","userID","match","params","userName","loadingCreate","loadingJoin","loadingFind","joinPartySuccess","createPartySuccess","findPartySuccess","joinPartyInput","joinPartySubmit","joinPartyResponse","findPartyInput","findPartySubmit","createPartyResult","findPartyResponse","playlistLink","cardInfo","showLoadingCreate","hideLoadingCreate","showLoadingJoin","hideLoadingJoin","showLoadingFind","hideLoadingFind","handleJoinPartySubmit","handleJoinPartyChange","handleFindPartySubmit","handleFindPartyChange","handleCreateTheParty","handleJoinTheParty","handleFindTheParty","event","value","preventDefault","postObj","post","partyNameToJoin","result","catch","error","console","log","partyNameToFind","loginCheck","loadingCreateCheck","loadingJoinCheck","loadingFindCheck","createdPartySuccessfully","joinedPartySuccessfully","foundPartySuccessfully","to","pathname","name","placeholder","onChange","playlist","err","withRouter","Preview","redirectBack","generateCard","info","alt","src","map","card","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.77a776a7.chunk.js","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport 'font-awesome/css/font-awesome.min.css';\n// reactstrap components\nimport {\n    Button\n} from \"reactstrap\";\n\n//import { AUTH_LINK } from '../constants';\n\n\nclass LoginButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            msg: this.props.msg ? this.props.msg : \"Log In\",\n            redirect: false,\n            userid: \"xd\",\n            loading: false,\n            redirectLink: ''\n        }\n        this.showLoading = this.showLoading.bind(this);\n        this.hideLoading = this.hideLoading.bind(this);\n        this.doTheLogin = this.doTheLogin.bind(this);\n        \n    }\n    showLoading() {\n        this.setState({loading: true});\n    }\n    hideLoading() {\n        setTimeout(()=> {this.setState({loading: false});}, 5000)\n    }\n    doTheLogin() {\n        this.showLoading();\n        axios.get('https://tune-in-pp-llc.herokuapp.com/api/login', {headers: {'Access-Control-Allow-Origin': '*', 'Content-Type':'application/json'}}).then(res => {\n            var response = res.data;\n            let authLink = 'http://accounts.spotify.com/authorize';\n            let clientId = response.clientId;\n            let redirectUri = encodeURIComponent(response.redirectUri);\n            let scope = encodeURIComponent(response.scope);\n            this.setState({\n                    redirect: true, \n                    redirectLink: `${authLink}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scope}&response_type=code`\n                }\n                );\n                this.hideLoading();\n            }\n        );\n    }\n    \n    render() {\n        const redirectCheck = this.state.redirect;\n        const loadingCheck = this.state.loading;\n        return (\n            <>\n            {redirectCheck ? window.location.replace(this.state.redirectLink) : null}\n                <Button className=\"btn-round ml-auto\" size=\"lg\" color=\"success\" onClick={()=>this.doTheLogin()}>\n                    {!loadingCheck ? <span><i className=\"tim-icons icon-key-25\"/> {this.state.msg} </span> : <span><i className=\"fa fa-refresh fa-spin\"/> Logging You In...</span>}\n                </Button>\n            </>\n            );\n    }\n}\n\nexport default LoginButton;\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport LoginButton from './LoginButton';\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n  \n  this.state = {\n    loggedIn: false,\n    user_id: \"\"\n  }\n}\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <div id=\"logo\">Tune-in <i className=\"tim-icons icon-sound-wave\"/></div>\n          <div>\n              <div>\n                <h1 class=\"welcome\">Welcome to Tune-in!</h1>\n                <h2 class=\"desc\">Create playlists with songs based on you and your friends' favorite songs! </h2>\n                <h3 class=\"explanation\">To get started, log into your Spotify account! We use a special algorithm to make sure you and your friends' taste in music is represented in the generated playlist. </h3>\n                <div class=\"login\"> <LoginButton location={this.props.location} msg=\"Log into Spotify!!\"/> </div>\n              </div>\n            <footer><p>Created by:   \n              <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/alden-liu-12212b12a/\">Alden Liu</a>, \n              <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/david-bao/\">David Bao</a>,\n              <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/drakewong/\">Drake Wong</a>,\n              <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/vincent-ngo/\">Vincent Ngo</a>,\n              <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/youngcai/\">Young Cai</a></p>\n              <p>© 2020 Panoramic Partners, LLC </p>\n            </footer>\n          </div>\n        </div>\n      </div>\n    )\n  }\n} \n\n/*<p>What the fuck did you just fucking say about me, you little bitch? I'll have you know I graduated top of my class in the Navy Seals, and I've been involved in numerous secret raids on Al-Quaeda, and I have over 300 confirmed kills. I am trained in gorilla warfare and I'm the top sniper in the entire US armed forces. You are nothing to me but just another target. I will wipe you the fuck out with precision the likes of which has never been seen before on this Earth, mark my fucking words. You think you can get away with saying that shit to me over the Internet? Think again, fucker. As we speak I am contacting my secret network of spies across the USA and your IP is being traced right now so you better prepare for the storm, maggot. The storm that wipes out the pathetic little thing you call your life. You're fucking dead, kid. I can be anywhere, anytime, and I can kill you in over seven hundred ways, and that's just with my bare hands. Not only am I extensively trained in unarmed combat, but I have access to the entire arsenal of the United States Marine Corps and I will use it to its full extent to wipe your miserable ass off the face of the continent, you little shit. If only you could have known what unholy retribution your little \"clever\" comment was about to bring down upon you, maybe you would have held your fucking tongue. But you couldn't, you didn't, and now you're paying the price, you goddamn idiot. I will shit fury all over you and you will drown in it. You're fucking dead, kiddo.</p>\n*/\n\n","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport './Dashboard.css';\nimport { Redirect, withRouter } from 'react-router';\nimport {\n  Button,\n} from \"reactstrap\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n  \n  this.state = {\n    userID: props.match.params.userID,\n    userName: props.match.params.userName,\n    loggedIn: props.match.params.loggedIn,\n\n    loadingCreate: false,\n    loadingJoin: false,\n    loadingFind: false,\n\n    joinPartySuccess: false,\n    createPartySuccess: false,\n    findPartySuccess: false,\n\n    joinPartyInput: '',\n    joinPartySubmit: '',\n    joinPartyResponse: '',\n\n    findPartyInput: '',\n    findPartySubmit: '',\n\n    createPartyResult: '',\n\n    findPartyResponse: '',\n    playlistLink: '',\n    cardInfo: '',\n\n\n  }\n  this.showLoadingCreate = this.showLoadingCreate.bind(this);\n  this.hideLoadingCreate = this.hideLoadingCreate.bind(this);\n\n  this.showLoadingJoin = this.showLoadingJoin.bind(this);\n  this.hideLoadingJoin = this.hideLoadingJoin.bind(this);\n\n  this.showLoadingFind = this.showLoadingFind.bind(this);\n  this.hideLoadingFind = this.hideLoadingFind.bind(this);\n\n  this.handleJoinPartySubmit = this.handleJoinPartySubmit.bind(this);\n  this.handleJoinPartyChange = this.handleJoinPartyChange.bind(this);\n  \n  this.handleFindPartySubmit = this.handleFindPartySubmit.bind(this);\n  this.handleFindPartyChange = this.handleFindPartyChange.bind(this);\n\n\n  this.handleCreateTheParty = this.handleCreateTheParty.bind(this);\n  this.handleJoinTheParty = this.handleJoinTheParty.bind(this);\n  this.handleFindTheParty = this.handleFindTheParty.bind(this);\n}\n  showLoadingCreate() {\n    this.setState({loadingCreate: true});\n  }\n  hideLoadingCreate() {\n    setTimeout(()=> {this.setState({loadingCreate: false});}, 2000)\n  }\n\n  showLoadingJoin() {\n    this.setState({loadingJoin: true});\n  }\n  hideLoadingJoin() {\n    setTimeout(()=> {this.setState({loadingJoin: false});}, 2000)\n  }\n\n  showLoadingFind() {\n    this.setState({loadingFind: true});\n  }\n  hideLoadingFind() {\n    setTimeout(()=> {this.setState({loadingFind: false});}, 2000)\n  }\n\n  handleJoinPartyChange(event) {\n    this.setState({joinPartyInput: event.target.value});\n  }\n\n  handleJoinPartySubmit(event) {\n    event.preventDefault()\n    this.setState({joinPartySubmit: this.state.joinPartyInput})\n  }\n\n  handleFindPartyChange(event) {\n    this.setState({findPartyInput: event.target.value});\n  }\n\n  handleFindPartySubmit(event) {\n    event.preventDefault()\n    this.setState({findPartySubmit: this.state.findPartyInput})\n  }\n\n  handleCreateTheParty() {\n    this.showLoadingCreate();\n    let postObj = {user_id: this.state.userID};\n    axios.post('https://tune-in-pp-llc.herokuapp.com/api/create', postObj).then(res => {\n      this.setState({createPartyResult: res.data});\n      this.hideLoadingCreate();\n      setTimeout(()=> {this.setState({createPartySuccess: true});}, 2000);\n    });\n    \n  }\n  //impressive-armadillo-of-imagination\n  handleJoinTheParty() {\n    if (this.state.joinPartyInput !== '') {\n      this.showLoadingJoin();\n      this.setState({joinPartySubmit: this.state.joinPartyInput})\n      let postObj = {user_id: this.state.userID, partyNameToJoin: this.state.joinPartyInput};\n      axios.post('https://tune-in-pp-llc.herokuapp.com/api/join', postObj).then( \n        (response) => { \n            var result = response.data; \n            //console.log(result);\n            this.setState({joinPartyResponse: result})\n            this.hideLoadingJoin();\n            setTimeout(()=> {this.setState({joinPartySuccess: true});}, 2000);\n        }\n    ).catch((error) => {\n      console.log(error);\n    });; \n      } \n  }\n\n  handleFindTheParty(){\n    if (this.state.findPartyInput !== '') {\n      this.showLoadingFind();\n      this.setState({findPartySubmit: this.state.findPartyInput})\n      let postObj = {user_id: this.state.userID, partyNameToFind: this.state.findPartyInput};\n      axios.post('https://tune-in-pp-llc.herokuapp.com/api/find', postObj).then( \n        (response) => { \n            var result = response.data; \n            //console.log(result);\n            if (typeof result === 'string'){\n              this.setState({findPartyResponse: result});\n            } else {\n              this.setState({playlistLink: result.playlistLink, cardInfo: result.cardInfo})\n            }\n            \n            this.hideLoadingFind();\n            setTimeout(()=> {this.setState({findPartySuccess: true});}, 2000);\n        }\n    ).catch((error) => {\n      console.log(error);\n    });; \n      } \n  }\n\n  render() {\n    try{\n      const loginCheck = this.state.loggedIn;\n      const loadingCreateCheck = this.state.loadingCreate;\n      const loadingJoinCheck = this.state.loadingJoin;\n      const loadingFindCheck = this.state.loadingFind;\n      const createdPartySuccessfully = this.state.createPartySuccess;\n      const joinedPartySuccessfully = this.state.joinPartySuccess;\n      const foundPartySuccessfully = this.state.findPartySuccess;\n      return (\n        <div >\n          <div className=\"dashboard\">\n            <div id=\"logo\">Tune-in <i className=\"tim-icons icon-sound-wave\"/></div>\n            {loginCheck ? <span><h1>Welcome, {this.state.userName}. Your new music awaits.</h1></span> : <Redirect to={{pathname:'/',state : {}}}/>}\n            \n            \n            <blockquote className=\"blockquote text-center\">\n            <h3>You can create your own party and invite people, or you can type in your friend's party name to join theirs!</h3> \n\n            <Button className=\"btn-round ml-auto\" size=\"lg\" color=\"default\" onClick={()=>this.handleCreateTheParty()}>\n            {!loadingCreateCheck ? <span><i className=\"tim-icons icon-single-02\" /> Create a Party! </span> : <span><i className=\"fa fa-refresh fa-spin\"/> Creating party...</span>}\n            </Button>\n          \n            <input name=\"partyToJoin\" id=\"partyToJoin\" placeholder=\"Party name to join\"value={this.state.joinPartyInput} onChange={this.handleJoinPartyChange} /> \n            <Button className=\"btn-round ml-auto\" size = \"lg\" color=\"primary\" onClick={()=>this.handleJoinTheParty()}>\n            {!loadingJoinCheck ? <span><i className=\"tim-icons icon-simple-add\" /> Join a Party!</span> : <span><i className=\"fa fa-refresh fa-spin\"/> Joining party...</span>}\n            </Button>\n            </blockquote>\n            {createdPartySuccessfully ? <span><h2>Party Name: {this.state.createPartyResult}</h2>\n            <h2>Share this link and party name to your friends now!</h2> </span> : null}\n\n            {joinedPartySuccessfully ? <span><h1>{this.state.joinPartyResponse}</h1></span> : null}\n            \n            <blockquote className=\"blockquote text-center\"> \n            <h3>Once your party is ready to generate a playlist, type in your party's name and hit the button to get your new playlist!</h3>\n            <input name=\"partyToFind\" id=\"partyToFind\" placeholder = \"Party name to find\" value={this.state.findPartyInput} onChange={this.handleFindPartyChange} />\n            <Button className=\"btn-round ml-auto\" size=\"lg\" color=\"warning\" onClick={()=>this.handleFindTheParty()}>\n            {!loadingFindCheck ? <span><i className=\"tim-icons icon-headphones\"/> Find Your Party's Playlist!</span> : <span><i className=\"fa fa-refresh fa-spin\"/> Finding party...</span>} \n            </Button> \n            </blockquote>\n            {foundPartySuccessfully ? <Redirect to={\n                  {pathname:'/preview',\n              state : {playlist:this.state.findPartyResponse, playlistLink:this.state.playlistLink, cardInfo:this.state.cardInfo, loggedIn: true}\n          }\n              }/> : <span><h1>{this.state.findPartyResponse}</h1></span>}\n\n            <footer><p>Created by:   \n                <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/alden-liu-12212b12a/\">Alden Liu</a>, \n                <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/david-bao/\">David Bao</a>,\n                <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/drakewong/\">Drake Wong</a>,\n                <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/vincent-ngo/\">Vincent Ngo</a>,\n                <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/youngcai/\">Young Cai</a></p>\n                <p>© 2020 Panoramic Partners, LLC </p>\n              </footer>\n          </div>\n        </div>\n      );\n            }\n            catch(err) {\n              return <Redirect to={{pathname:'/',state : {}}}/>;\n            }\n  }\n}\n\nexport default withRouter(Dashboard)\n/* \n\n          \n          */\n/*<h1>Party Name Found! Here is your party's playlist: {this.state.playlistLink}</h1>*/\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport './Card.css';\nimport './Preview.css';\nimport {\n  Button,\n} from \"reactstrap\";\n\nexport default class Preview extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            loggedIn: false,\n            redirect: false,\n            playlist: \"\"\n        }\n        this.redirectBack = this.redirectBack.bind(this)\n        this.generateCard = this.generateCard.bind(this)\n    }\n    redirectBack() {\n        this.setState({redirect: true})\n    }\n    generateCard(info) {\n\n        return <article class=\"card\">\n        <header class=\"card-header\">\n          <h2><a rel=\"noopener noreferrer\" target=\"_blank\" href={info[3]}>{info[0]}</a></h2>\n          <div class=\"author-name\">\n              {info[1]}\n          </div>\n        </header>\n        <div class=\"card-author\">\n          <div class=\"author-avatar\" href=\"\" target=\"_blank\">\n            <img alt=\"Album Cover\"src={info[2]}/>\n          </div>\n        </div>\n        \n      </article>\n      \n        \n    }\n    render() {\n      try{\n        const redirectCheck = this.state.redirect;\n        const playlistLink = this.props.location.state.playlistLink;\n        const cardInfo = this.props.location.state.cardInfo;\n        const loginCheck = this.props.location.state.loggedIn;\n\n        return <div className=\"preview\">\n        <div id=\"logo\">Tune-in <i className=\"tim-icons icon-sound-wave\"/></div>\n        {loginCheck ? null : <Redirect to={{pathname:'/',state : {}}}/>}\n\n        {redirectCheck ? <Redirect to={{pathname:'/', state : {}}}/> : null}\n\n        <h1 className=\"previewHeader\">Playlist Preview</h1> \n\n        <section class=\"card-list\">\n            {cardInfo.map((card) => this.generateCard(card))}\n        </section>\n        \n        <h1 > Playlist Link: <a className=\"playlistLink\" rel=\"noopener noreferrer\" target=\"_blank\" href={playlistLink}> {playlistLink}</a></h1>\n        \n        \n\n          <footer><p>Created by:   \n              <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/alden-liu-12212b12a/\">Alden Liu</a>, \n              <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/david-bao/\">David Bao</a>,\n              <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/drakewong/\">Drake Wong</a>,\n              <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/vincent-ngo/\">Vincent Ngo</a>,\n              <a className=\"credit\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/youngcai/\">Young Cai</a></p>\n              <p>© 2020 Panoramic Partners, LLC </p>\n            </footer>\n            <div><Button className=\"btn-round ml-auto\" size=\"lg\" color=\"warning\" onClick={()=>this.redirectBack()}>\n          Create, join, or find another party! \n          </Button> </div>\n\n        </div>\n      }\n        catch(err) {\n          return <Redirect to={{pathname:'/',state : {}}}/>;\n        }\n    }\n}\n\n\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Dashboard from \"./components/Dashboard\";\nimport Preview from \"./components/Preview\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        \n            <Route\n              exact\n              path={\"/\"}\n              component = {Home}\n            />\n\n            <Route\n              path={'/partytime/userID=:userID/userName=:userName/loggedIn=:loggedIn'}\n              component = {Dashboard}\n            />\n\n             <Route\n              exact\n              path={\"/preview\"}\n              component = {Preview}\n            />\n         \n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"blk-design-system-react/src/assets/scss/blk-design-system-react.scss\";\nimport \"blk-design-system-react/src/assets/css/nucleo-icons.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route component={App}/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}